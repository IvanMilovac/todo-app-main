{"version":3,"sources":["components/Checkbox.js","images/icon-sun.svg","images/icon-moon.svg","components/Banner.js","components/BodySection.js","App.js","index.js"],"names":["Checkbox","theme","value","onClick","label","type","onChange","e","target","checked","id","className","defaultChecked","htmlFor","Banner","todos","setTodos","useContext","themeContext","setTheme","useState","checkboxValue","setCheckboxValue","todoText","setTodoText","src","IconSun","IconMoon","prev","localStorage","setItem","alt","onSubmit","preventDefault","length","text","completed","JSON","stringify","placeholder","BodySection","previousTodosState","setPreviousTodosState","activeButton","setActiveButton","useEffect","map","todo","index","td","filter","disabled","createContext","App","getItem","parse","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8c87e3c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"../styles/components/Checkbox.scss\";\r\n\r\nconst Checkbox = ({ theme, value, onClick, label }) => {\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"checkbox\"\r\n        onChange={(e) => onClick(e.target.checked)}\r\n        id={label}\r\n        className=\"todo-checkbox\"\r\n        defaultChecked={value}\r\n      />\r\n      <label\r\n        className={theme === \"light\" ? \"light-input\" : \"dark-input\"}\r\n        htmlFor={label}\r\n      ></label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","import React, { useState, useContext } from \"react\";\r\n\r\nimport Checkbox from \"./Checkbox\";\r\n\r\nimport { themeContext } from \"../App\";\r\n\r\nimport \"../styles/components/Banner.scss\";\r\n\r\nimport IconSun from \"../images/icon-sun.svg\";\r\nimport IconMoon from \"../images/icon-moon.svg\";\r\n\r\nconst Banner = ({ todos, setTodos }) => {\r\n  const { theme, setTheme } = useContext(themeContext);\r\n  const [checkboxValue, setCheckboxValue] = useState(false);\r\n  const [todoText, setTodoText] = useState(\"\");\r\n  const changeThemeHandler = () => {\r\n    setTheme((prev) => (prev === \"light\" ? \"dark\" : \"light\"));\r\n    theme === \"light\"\r\n      ? localStorage.setItem(\"theme\", \"dark\")\r\n      : localStorage.setItem(\"theme\", \"light\");\r\n  };\r\n  const newTodoHandler = (e) => {\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos,\r\n      {\r\n        id: todos.length + 1,\r\n        text: todoText,\r\n        completed: checkboxValue,\r\n      },\r\n    ]);\r\n    localStorage.setItem(\r\n      \"todos\",\r\n      JSON.stringify([\r\n        ...todos,\r\n        {\r\n          id: todos.length + 1,\r\n          text: todoText,\r\n          completed: checkboxValue,\r\n        },\r\n      ])\r\n    );\r\n    setTodoText(\"\");\r\n    setCheckboxValue(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`banner ${\r\n        theme === \"light\" ? \"banner-light-bg-image\" : \"banner-dark-bg-image\"\r\n      }`}\r\n    >\r\n      <div className=\"banner-content\">\r\n        <div className=\"banner-header\">\r\n          <h2>Todo</h2>\r\n          <img\r\n            src={theme === \"dark\" ? IconSun : IconMoon}\r\n            onClick={changeThemeHandler}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <form onSubmit={newTodoHandler} className=\"input-todo\">\r\n          <Checkbox\r\n            theme={theme}\r\n            value={checkboxValue}\r\n            onClick={setCheckboxValue}\r\n            label=\"cb-input\"\r\n          />\r\n          <input\r\n            className={theme === \"light\" ? \"light-input\" : \"dark-input\"}\r\n            type=\"text\"\r\n            placeholder=\"Create a new todo...\"\r\n            value={todoText}\r\n            onChange={(e) => setTodoText(e.target.value)}\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\n\r\nimport { themeContext } from \"../App.js\";\r\n\r\nimport Checkbox from \"./Checkbox\";\r\n\r\nimport \"../styles/components/BodySection.scss\";\r\n\r\nconst BodySection = ({ todos, setTodos }) => {\r\n  const { theme } = useContext(themeContext);\r\n  const [previousTodosState, setPreviousTodosState] = useState([...todos]);\r\n  const [activeButton, setActiveButton] = useState(\"all\");\r\n\r\n  useEffect(() => {\r\n    setPreviousTodosState([...todos]);\r\n  }, [todos]);\r\n\r\n  const clearHandler = () => {\r\n    setTodos(todos.filter((todo) => todo.completed === false));\r\n  };\r\n\r\n  const completedTodosHandler = () => {\r\n    setPreviousTodosState(todos.filter((todo) => todo.completed === true));\r\n    setActiveButton(\"completed\");\r\n  };\r\n\r\n  const activeTodosHandler = () => {\r\n    setPreviousTodosState(todos.filter((todo) => todo.completed === false));\r\n    setActiveButton(\"active\");\r\n  };\r\n\r\n  const allTodosHandler = () => {\r\n    setPreviousTodosState([...todos]);\r\n    setActiveButton(\"all\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`body-section ${\r\n        theme === \"light\" ? \"light-body-bg\" : \"dark-body-bg\"\r\n      }`}\r\n    >\r\n      <div\r\n        className={`body-section-container ${\r\n          todos.length === 0 && \"no-items-display-none\"\r\n        }`}\r\n      >\r\n        <ul>\r\n          {previousTodosState.map((todo, index) => (\r\n            <li\r\n              className={`${theme === \"light\" ? \"light-input\" : \"dark-input\"}`}\r\n              key={todo.text}\r\n            >\r\n              <Checkbox\r\n                theme={theme}\r\n                value={todo.completed}\r\n                className=\"checkbox-list-item\"\r\n                onClick={(e) => {\r\n                  setTodos(\r\n                    todos.map((td) => {\r\n                      if (todo.id === td.id) {\r\n                        return { ...td, completed: e };\r\n                      }\r\n                      return td;\r\n                    })\r\n                  );\r\n                  localStorage.setItem(\r\n                    \"todos\",\r\n                    JSON.stringify(\r\n                      todos.map((td) => {\r\n                        if (todo.id === td.id) {\r\n                          return { ...td, completed: e };\r\n                        }\r\n                        return td;\r\n                      })\r\n                    )\r\n                  );\r\n                }}\r\n                label={todo.text}\r\n              />\r\n              <span className={`todo-text ${todo.completed && \"line-through\"}`}>\r\n                {todo.text}\r\n              </span>\r\n              <span\r\n                onClick={() => {\r\n                  setTodos(todos.filter((td) => td.id !== todo.id));\r\n                  localStorage.setItem(\r\n                    \"todos\",\r\n                    JSON.stringify(todos.filter((td) => td.id !== todo.id))\r\n                  );\r\n                }}\r\n                className=\"todo-delete\"\r\n              >\r\n                &times;\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div\r\n          className={`items-left-clear-completed ${\r\n            theme === \"light\" ? \"light\" : \"dark\"\r\n          }`}\r\n        >\r\n          <span>\r\n            {todos.filter((todo) => todo.completed === false).length} items left\r\n          </span>\r\n          <button\r\n            onClick={clearHandler}\r\n            disabled={\r\n              todos.filter((todo) => todo.completed === true).length === 0\r\n            }\r\n          >\r\n            Clear Completed\r\n          </button>\r\n        </div>\r\n        <div\r\n          className={`filter-buttons ${\r\n            theme === \"light\" ? \"light-theme\" : \"dark-theme\"\r\n          }`}\r\n        >\r\n          <button\r\n            onClick={allTodosHandler}\r\n            className={activeButton === \"all\" ? \"active\" : \"\"}\r\n          >\r\n            All\r\n          </button>\r\n          <button\r\n            onClick={activeTodosHandler}\r\n            className={activeButton === \"active\" ? \"active\" : \"\"}\r\n          >\r\n            Active\r\n          </button>\r\n          <button\r\n            onClick={completedTodosHandler}\r\n            className={activeButton === \"completed\" ? \"active\" : \"\"}\r\n          >\r\n            Completed\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BodySection;\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nimport Banner from \"./components/Banner\";\r\nimport BodySection from \"./components/BodySection\";\r\nimport \"./styles/reset.scss\";\r\n\r\nexport const themeContext = createContext();\r\n\r\nconst App = () => {\r\n  const [theme, setTheme] = useState(localStorage.getItem(\"theme\") || \"light\");\r\n  const [todos, setTodos] = useState(\r\n    JSON.parse(localStorage.getItem(\"todos\")) || []\r\n  );\r\n  return (\r\n    <themeContext.Provider value={{ theme, setTheme }}>\r\n      <Banner setTodos={setTodos} todos={todos} />\r\n      <BodySection setTodos={setTodos} todos={todos} />\r\n    </themeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}